---
  name: Docker Build and Push
  
  on:
    push:
      branches:
      - main
      tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  
  jobs:
    build:
      runs-on: ubuntu-latest
  
      steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v3

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}
      
      - name: create branch
        run: git checkout -b ${{ steps.vars.outputs.sha_short }}
          
      - name: Set version in values
        if: github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/')
        uses: mikefarah/yq@master
        with:
          cmd: |
            yq -i '.phpfpm_image_version= "${{steps.vars.outputs.sha_short}}"' 'argocd/stage/luxplus/gb/Values.yaml'
            yq -i '.nginx_image_version = "${{steps.vars.outputs.sha_short}}"' 'argocd/stage/luxplus/gb/Values.yaml'

      - name: Set version in values
        if: startsWith(github.ref, 'refs/tags/')
        uses: mikefarah/yq@master
        with:
          cmd: |
            yq -i '.phpfpm_image_version= "${{github.ref.tags}}"' 'argocd/production/luxplus/gb/Values.yaml'
            yq -i '.nginx_image_version = "${{github.ref.tags}}"' 'argocd/production/luxplus/gb/Values.yaml'
          
      - name: git add, configure author, commit and push
        run: |
          git add argocd/stage
          git add argocd/production
          git config user.name "GitHubActions"
          git config user.email "<>"
          git commit -m "update image version ${{github.ref_name}}"
          git push --set-upstream origin ${{ steps.vars.outputs.sha_short }}
      
      - name: setup PR with new version for images 
        run: |
          gh pr create --title 'titlevar' --body 'bodyvar' --base main
          gh pr merge --rebase 
        env: 
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
